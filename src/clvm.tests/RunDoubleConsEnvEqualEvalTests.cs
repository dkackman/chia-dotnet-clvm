namespace clvm.tests;

public class RunDoubleConsEnvEqualEvalTests
{
#pragma warning disable CS8625 // Cannot convert null literal to non-nullable reference type.

    public static IEnumerable<object[]> TestData =>
    [
        // double-cons-1
        [new object[] { "((+) 1 2 3 4)" }, new object[] { "10", 1500L }],
        // double-cons-2
        [new object[] { "((*) 1 2 3 4)" }, new object[] { "24", 2892L }],
        // double-cons-3
        [new object[] { "((+ . foo) 1 2 3)" }, new object[] { null }],
        // double-cons-4
        [new object[] { "(((+)) 1 2 3)" }, new object[] { null }],
        // env-1
        [new object[] { "1", "(100)" }, new object[] { "(100)", 53L }],
        // env-2
        [new object[] { "1", "(990)" }, new object[] { "(990)", 53L }],
        // env-3
        [new object[] { "1" }, new object[] { "()", 53L }],
        // env-4
        [new object[] { "1", "(100 200)" }, new object[] { "(100 200)", 53L }],
        // env-5
        [new object[] { "1", "((100 101 102) 105)" }, new object[] { "((100 101 102) 105)", 53L }],
        // equal-1
        [new object[] { "(= (q . 10))" }, new object[] { null }],
        // equal-10
        [
            new object[] { "(= (q . 0xq . 0x},
            new object[] { "1", 857L }
        ],
        // equal-11
        [new object[] { "(= (q . 0) (q . (0)))" }, new object[] { null }],
        // equal-2
        [new object[] { "(= (q . 10) (q . 10))" }, new object[] { "1", 169L }],
        // equal-3
        [new object[] { "(= (q . 10) 1)", "10" }, new object[] { "1", 193L }],
        // equal-4
        [new object[] { "(= (q . 0) (q . 0))" }, new object[] { "1", 167L }],
        // equal-5
        [new object[] { "(= (q . (0)) (q . 0))" }, new object[] { null }],
        // equal-6
        [new object[] { "(= (q . 2) (q . 3))" }, new object[] { "()", 169L }],
        // equal-7
        [new object[] { "(= 3 3)" }, new object[] { null }],
        // equal-8
        [new object[] { "(= (f 1) (+ (f (r 1)) (f (r (r 1)))))", "(7 3 4)" }, new object[] { "1", 1203L }],
        // equal-9
        [new object[] { "(= (f 1) (+ (f (r 1)) (f (r (r 1)))))", "(7 3 3)" }, new object[] { "()", 1203L }],
        // eval-1
        [new object[] { "(a (q . 1) (q . (100 200)))" }, new object[] { "(100 200)", 184L }],
        // eval-2
        [new object[] { "(a (q . 1))" }, new object[] { null }],
        // eval-3
        [new object[] { "(a (q . (c (f 1) (q . (105 200)))) (q . (100 200)))" }, new object[] { "(100 105 200)", 286L }],
        // eval-4
        [new object[] { "(a (q . 0) (q . 1) (q . 2))" }, new object[] { null }],
    ];

    [Theory]
    [MemberData(nameof(TestData))]
    public void TestRun(object[] input, object[] output)
    {
        RunTestHelper.Run(input, output);
    }
}